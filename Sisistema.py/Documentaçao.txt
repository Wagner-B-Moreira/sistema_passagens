=========================================
SISTEMA DE RESERVA DE PASSAGENS A√âREAS
=========================================

Este programa permite ao usu√°rio:
- Comprar passagens a√©reas              # Cadastro de nova reserva
- Fazer check-in em reservas            # Atualiza o status da reserva
- Consultar reservas existentes         # Exibe dados da reserva pelo c√≥digo

FUNCIONAMENTO:
--------------
- As reservas s√£o salvas em um arquivo JSON chamado 'reservas.json'.   # Armazenamento permanente
- Cada reserva possui: nome, destino, c√≥digo √∫nico e status de check-in. # Dados principais da reserva
- O sistema carrega as reservas do arquivo ao iniciar e salva sempre que h√° altera√ß√£o. # Persist√™ncia autom√°tica

PRINCIPAIS FUN√á√ïES:
-------------------
- salvar_reservas(): Salva todas as reservas no arquivo JSON.          # Atualiza o arquivo com os dados atuais
- comprar_passagem(): Cadastra uma nova reserva e gera um c√≥digo √∫nico. # Recebe dados do usu√°rio e cria reserva
- fazer_checkin(): Marca o check-in de uma reserva existente.          # Atualiza o campo 'checkin' para True
- consultar_reservas(): Mostra os dados de uma reserva pelo c√≥digo.    # Busca e exibe informa√ß√µes da reserva

SINTAXE IMPORTANTE:
-------------------
- import json: Importa a biblioteca para manipular arquivos JSON.      # Necess√°ria para salvar/carregar dados
- with open(...): Abre arquivos de forma segura.                       # Garante que o arquivo ser√° fechado corretamente
- json.dump(...): Salva dados em formato JSON.                         # Escreve no arquivo
- json.load(...): Carrega dados do formato JSON.                       # L√™ do arquivo
- input(...): Recebe dados do usu√°rio pelo terminal.                   # Intera√ß√£o com o usu√°rio
- while True: Cria o loop principal do sistema.                        # Mant√©m o programa rodando at√© o usu√°rio sair

ESTRUTURA DOS DADOS:
--------------------
- As reservas s√£o armazenadas em um dicion√°rio chamado 'reservas'.     # Estrutura principal do sistema
- Cada chave do dicion√°rio √© o c√≥digo da reserva.                      # Exemplo: "JOHSPO1"
- Cada valor √© outro dicion√°rio com os dados da reserva.               # Cont√©m nome, destino, c√≥digo e checkin

FLUXO DO SISTEMA:
-----------------
1. Mostra o menu principal.                                            # Interface de op√ß√µes
2. Executa a op√ß√£o escolhida pelo usu√°rio.                             # Chama a fun√ß√£o correspondente
3. Salva altera√ß√µes imediatamente.                                     # Atualiza o arquivo JSON
4. Repete at√© o usu√°rio escolher "Sair".                               # Loop cont√≠nuo at√© encerramento

-----------------------------------------
Documenta√ß√£o comentada por Copilot üß†üíª
